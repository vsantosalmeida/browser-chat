// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	stooq "github.com/vsantosalmeida/browser-chat/pkg/stooq"
)

// API is an autogenerated mock type for the API type
type API struct {
	mock.Mock
}

// GetStock provides a mock function with given fields: ctx, stockID
func (_m *API) GetStock(ctx context.Context, stockID string) (*stooq.GetStockResponse, error) {
	ret := _m.Called(ctx, stockID)

	var r0 *stooq.GetStockResponse
	if rf, ok := ret.Get(0).(func(context.Context, string) *stooq.GetStockResponse); ok {
		r0 = rf(ctx, stockID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*stooq.GetStockResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, stockID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewAPI interface {
	mock.TestingT
	Cleanup(func())
}

// NewAPI creates a new instance of API. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAPI(t mockConstructorTestingTNewAPI) *API {
	mock := &API{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
